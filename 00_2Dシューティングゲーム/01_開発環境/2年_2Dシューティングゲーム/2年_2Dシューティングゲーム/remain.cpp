//=============================================================================
//
// 残機クラス [remain.cpp]
// Author : Konishi Yuuto
//
//=============================================================================

//=============================================================================
// インクルード
//=============================================================================
#include "remain.h"
#include "manager.h"
#include "renderer.h"
#include "number.h"
#include "player.h"

//=============================================================================
// コンストラクタ
//=============================================================================
CRemain::CRemain()
{
	m_pRemain = NULL;
	m_nRemain = PLAYER_REMAIN_NUM;
}

//=============================================================================
// デストラクタ
//=============================================================================
CRemain::~CRemain()
{

}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CRemain::Init(D3DXVECTOR3 pos, D3DXVECTOR3 size, TYPE type)
{
	// 数字のメモリ確保
	m_pRemain = CNumber::Create(pos, size, type, CNumber::NUMBER_TYPE_NONE);

	if (m_pRemain != NULL)
	{
		// 数字の設定
		m_pRemain->SetNumber(PLAYER_REMAIN_NUM);
	}

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CRemain::Uninit(void)
{
		// ナンバー終了処理
		if (m_pRemain != NULL)
		{
			m_pRemain->Uninit();
		}

	// メモリの開放処理
	Release();
}

//=============================================================================
// 更新処理
//=============================================================================
void CRemain::Update(void)
{

}

//=============================================================================
// 描画処理
//=============================================================================
void CRemain::Draw(void)
{
	if (m_pRemain != NULL)
	{
		// 描画処理
		m_pRemain->Draw();
	}
}

//=============================================================================
// スコアの設定
//=============================================================================
void CRemain::SetRemain(int nNumber)
{
	// 0以下にならない
	if (m_nRemain > 0)
	{
		m_nRemain -= nNumber;

		// 数字の設定
		m_pRemain->SetNumber(m_nRemain);
	}
}