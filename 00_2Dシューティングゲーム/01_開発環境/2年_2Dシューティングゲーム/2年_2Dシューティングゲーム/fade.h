#ifndef _FADE_H_
#define _FADE_H_
//=====================================================
//
// フェードクラスヘッダー [fade.h]
// Author:小西優斗
//
//=====================================================

//=====================================================
// インクルード
//=====================================================
#include "main.h"
#include "manager.h"
#include "polygon.h"
//=====================================================
// フェードの情報
//=====================================================
#define FADE_RATE (0.05f)		// フェードの速さ

//=====================================================
// 前方宣言
//=====================================================
class CPoligon;

//=====================================================
// クラスヘッダー
//=====================================================
class CFade
{
public:
	//=====================================================
	// フェードの情報
	//=====================================================
	typedef enum
	{
		FADE_NONE = 0,		// 何もしない状態
		FADE_IN,			// フェードイン処理
		FADE_OUT,			// フェードアウト処理
		FADE_MAX
	}FADE;

	//=============================================================================
	// 構造体定義
	//=============================================================================
	typedef struct
	{
		D3DXVECTOR3 pos;	// 頂点座標
		float rhw;			// 座標
		D3DCOLOR col;		// 頂点カラー
		D3DXVECTOR2 tex;	// テクスチャ座標
	}VERTEX_2D;

	CFade();										// コンストラクタ
	~CFade();										// デストラクタ

	HRESULT Init(void);								// 初期化処理
	void Uninit(void);								// 終了処理
	void Update(void);								// 更新処理
	void Draw(void);								// 描画処理

	static CFade *Create(void);						// ポリゴン生成
	void SetFade(CManager::MODE modeNext);			// フェードのセット
	FADE Get(void);									// フェード状態の情報

private:
	FADE m_fade;							// フェード状態
	D3DXCOLOR m_ColorFade;					// フェードの色
	CManager::MODE m_modeNext;				// 次のモード
	CPolygon *m_pPolygon;					// ポリゴンのメモリ
};

#endif